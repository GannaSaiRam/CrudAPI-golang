version: '3.7'

networks:
  custom_network:
    name: namespace_network
    driver: bridge

services:
  zoo:
    container_name: service_zoo
    networks:
      - custom_network
    image: zookeeper
    restart: always
    hostname: zoo
    volumes:
      - ./config/zoo.cfg:/conf/zoo.cfg
    environment:
      ZOOKEEPER_CLIENT_PORT: 5181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: service_kafka
    networks:
      - custom_network
    image: confluentinc/cp-kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zoo:5181"
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zoo

  kowl:
    container_name: service_kowl
    networks:
      - custom_network
    image: quay.io/cloudhut/kowl
    restart: on-failure
    hostname: kowl
    volumes:
      - ./config/kowlconfig.yaml:/etc/kowl/config.yaml
    ports:
      - "8080:8080"
    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
    depends_on:
      - kafka

  mongodb:
    container_name: service_mongodb
    networks:
      - custom_network
    image: mongo
    hostname: mongo
    volumes:
      - ./mongodb/database:/data/db
    ports:
      - 27017:27017
    restart: unless-stopped

  mongoserver:
    container_name: service_mongo_server
    networks:
      - custom_network
    # hostname: mongoserver
    image: ${IMAGENAME_MONGOSERVER}
    ports:
      - "${MONGOSERVER_PORT}:${MONGOSERVER_PORT}"
    restart: on-failure
    depends_on:
      - mongodb
      - kowl
    # environment:
    #   - dport=9000
    env_file:
      - .env

  userserver:
    container_name: service_user_server
    networks:
      - custom_network
    # hostname: server
    image: ${IMAGENAME_USERSERVER}
    restart: on-failure
    ports:
      - "${USERSERVER_PORT}:${USERSERVER_PORT}"
      - "${USERSERVER_GRPC}:${USERSERVER_GRPC}"
    depends_on:
      - kowl
      - mongoserver
    # environment:
    #   - dmongo_address=service_mongo_server:9000
    #   - dport=8000
    env_file:
      - .env

  productserver:
    container_name: service_product_server
    networks:
      - custom_network
    # hostname: server
    image: ${IMAGENAME_PRODUCTSERVER}
    restart: on-failure
    ports:
      - "${PRODUCTSERVER_PORT}:${PRODUCTSERVER_PORT}"
      - "${PRODUCTSERVER_GRPC}:${PRODUCTSERVER_GRPC}"
    depends_on:
      - kowl
      - mongoserver
    # environment:
    #   - dmongo_address=service_mongo_server:9000
    #   - dport=8000
    env_file:
      - .env

  